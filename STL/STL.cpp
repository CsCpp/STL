#include <iostream>
#include <deque>
using namespace std;

//deque  двухсторонняя очередь // векторы в двухсвязном списке


int main()
{
	setlocale(LC_ALL, "ru");
	deque<int> myDeque = {4,52,64,86,54};
	
	myDeque.pop_back();
	myDeque.pop_front();
	myDeque.push_front(5);
	myDeque.push_back(3);
	myDeque.assign(5, 43);				//позволяет заменить все элементы очереди определенным набором


	for (auto &&i: myDeque)
	{
		cout << i << endl;

	}

		/*
		push_back(val) : добавляет значение val в конец очереди
		push_front(val) : добавляет значение val в начало очереди
		emplace_back(val) : добавляет значение val в конец очереди
		emplace_front(val) : добавляет значение val в начало очереди
		emplace(pos, val) : вставляет элемент val на позицию, на которую указывает
				итератор pos.Возвращает итератор на добавленный элемент
		insert(pos, val) : вставляет элемент val на позицию, на которую указывает итератор
				pos, аналогично функции emplace.Возвращает итератор на добавленный элемент
		insert(pos, n, val) : вставляет n элементов val начиная с позиции, на которую указывает
				итератор pos.Возвращает итератор на первый добавленный элемент.Если n = 0, 
				то возвращается итератор pos.
		insert(pos, begin, end) : вставляет начиная с позиции, на которую указывает итератор
				pos, элементы из другого контейнера из диапазона между итераторами begin и end.
				Возвращает итератор на первый добавленный элемент.Если между итераторами begin 
				и end нет элементов, то возвращается итератор pos.
		insert(pos, values) : вставляет список значений values начиная с позиции, на которую 
				указывает итератор pos.Возвращает итератор на первый добавленный элемент.Если values 
				не содержит элементов, то возвращается итератор pos.
		*/

	return 0;
}
